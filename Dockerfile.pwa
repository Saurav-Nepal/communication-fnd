FROM node:18-alpine AS base

FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update

# Set working directory
WORKDIR /app/pwa
RUN yarn global add turbo@1.10.16
RUN yarn add sharp
COPY . .
RUN turbo prune --scope=@finnoto/pwa --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app/pwa

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/pwa/out/json/ .
COPY --from=builder /app/pwa/out/yarn.lock ./yarn.lock
RUN yarn install

# Build the project
COPY --from=builder /app/pwa/out/full/ .
RUN yarn turbo run build --filter=@finnoto/pwa...

FROM base AS runner
WORKDIR /app/pwa

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=installer /app/pwa/apps/pwa/next.config.js .
COPY --from=installer /app/pwa/apps/pwa/package.json .

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=installer --chown=nextjs:nodejs /app/pwa/apps/pwa/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/pwa/apps/pwa/.next/static ./apps/pwa/.next/static
COPY --from=installer --chown=nextjs:nodejs /app/pwa/apps/pwa/public ./apps/pwa/public

# CMD [ "node", "apps/pwa/server.js" ]