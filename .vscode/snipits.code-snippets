{
    "generate approvals": {
        "prefix": "genRep",
        "body": [
            "  const { date, filter } = useFetchParams();",
            "",
            "\tconst documentProps: GenericDocumentListingProps = {",
            "\t\tname: 'My Pending Approvals ',",
            "\t\ttype: 'fetch_report',",
            "\t\tfilters: false,",
            "\t\tdateFilter: false,",
            "\t\tsearchMethod: 'fetchList',",
            "\t\tdisableAggregation: false,",
            "\t\tdefaultClassParams: {",
            "\t\t\tignore_dto_all: true,",
            "\t\t\tslug: 'my.pending.approvals.list',",
            "\t\t\t// start_time: date,",
            "\t\t},",
            "\t\tsearchFilter: false,",
            "\t\ttable: [",
            "\t\t\t{",
            "\t\t\t\tname: 'Identifier',",
            "\t\t\t\tkey: 'identifier',",
            "\t\t\t\tdisableRightClick: true,",
            "\t\t\t\turl: (_: any) => {",
            "\t\t\t\t\tif (SOURCEHASH.expense === _?.source_type) {",
            "\t\t\t\t\t\treturn `${EMPLOYEE_EXPENSE_DETAIL_ROUTE}/${_?.source_id}`;",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (SOURCEHASH.employeeAdvance === _?.source_type) {",
            "\t\t\t\t\t\treturn `${EMPLOYEE_EMPLOYEE_ADVANCE_DETAIL}/${_?.source_id}`;",
            "\t\t\t\t\t}",
            "\t\t\t\t\treturn null;",
            "\t\t\t\t},",
            "\t\t\t},",
            "\t\t\t{",
            "\t\t\t\tname: 'Type',",
            "\t\t\t\tkey: 'source_type',",
            "\t\t\t\trenderValue: (_: any) => {",
            "\t\t\t\t\tif (SOURCEHASH.expense === _?.source_type) {",
            "\t\t\t\t\t\treturn <span className='font-medium'>Expense</span>;",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (SOURCEHASH.employeeAdvance === _?.source_type) {",
            "\t\t\t\t\t\treturn <span className='font-medium'>Advance</span>;",
            "\t\t\t\t\t}",
            "\t\t\t\t\treturn '-';",
            "\t\t\t\t},",
            "\t\t\t},",
            "",
            "\t\t\t{",
            "\t\t\t\tname: 'Party',",
            "\t\t\t\tkey: 'from_name',",
            "\t\t\t\tdisableRightClick: true,",
            "\t\t\t\trenderValue: (_: any) => {",
            "\t\t\t\t\tconst commonClass = 'flex items-center gap-2';",
            "\t\t\t\t\tif (_.employee_id) {",
            "\t\t\t\t\t\treturn (",
            "\t\t\t\t\t\t\t<div className={commonClass}>",
            "\t\t\t\t\t\t\t\t<EmployeeIconImage className='w-8 h-8' />",
            "\t\t\t\t\t\t\t\t<p>{_.employee_name}</p>",
            "\t\t\t\t\t\t\t</div>",
            "\t\t\t\t\t\t);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (_.from_id) {",
            "\t\t\t\t\t\treturn (",
            "\t\t\t\t\t\t\t<div className={commonClass}>",
            "\t\t\t\t\t\t\t\t<BusinessIconImage className='w-8 h-8' />",
            "\t\t\t\t\t\t\t\t<p>{_.from_name}</p>",
            "\t\t\t\t\t\t\t</div>",
            "\t\t\t\t\t\t);",
            "\t\t\t\t\t}",
            "\t\t\t\t\treturn (",
            "\t\t\t\t\t\t<div className={commonClass}>",
            "\t\t\t\t\t\t\t<p>{_.employee_name}</p>",
            "\t\t\t\t\t\t</div>",
            "\t\t\t\t\t);",
            "\t\t\t\t},",
            "\t\t\t},",
            "\t\t\t{",
            "\t\t\t\tname: 'Amount',",
            "\t\t\t\tkey: 'amount',",
            "\t\t\t\ttype: 'currency',",
            "\t\t\t},",
            "\t\t\t{",
            "\t\t\t\tname: 'Status',",
            "\t\t\t\tkey: 'id',",
            "\t\t\t\tsortable: false,",
            "\t\t\t\tclassName: 'w-1 text-center',",
            "\t\t\t\tdisableRightClick: true,",
            "\t\t\t\trenderValue: (item) => (",
            "\t\t\t\t\t<ReportExpenseStatus",
            "\t\t\t\t\t\tfinops_status_id={item?.finops_status_id}",
            "\t\t\t\t\t\tpayment_status_id={item?.payment_status_id}",
            "\t\t\t\t\t\tverification_status_id={item?.verification_status_id}",
            "\t\t\t\t\t/>",
            "\t\t\t\t),",
            "\t\t\t},",
            "",
            "\t\t\t{",
            "\t\t\t\tname: 'Department',",
            "\t\t\t\tkey: 'department_name',",
            "\t\t\t\tdisableRightClick: true,",
            "\t\t\t},",
            "",
            "\t\t\t{",
            "\t\t\t\tname: 'POC',",
            "\t\t\t\tkey: 'poc_name',",
            "\t\t\t\tdisableRightClick: true,",
            "\t\t\t},",
            "",
            "\t\t\t{",
            "\t\t\t\tname: 'Creation Date',",
            "\t\t\t\tkey: 'created_at',",
            "\t\t\t\ttype: 'date_time',",
            "\t\t\t\tdisableRightClick: true,",
            "\t\t\t},",
            "\t\t] as TableColumn[],",
            "\t\tcustomNoData: {",
            "\t\t\tdescription: null,",
            "\t\t},",
            "\t};",
            "",
            "\treturn <GenericDocumentListing {...documentProps} />;"
        ]
    },
    "console log": {
        "prefix": "cl",
        "body": ["console.log($1, '$2');"],
        "description": "console log"
    },

    "gcard": {
        "prefix": "gcard",
        "body": [
            "<ArcGenericCard",
            "   card={{",
            "       isClickable: true,",
            "       className: 'mb-3',",
            "       ...props,",
            "   }}",
            "   avatar={{",
            "       sourceKey: 'image_url',",
            "       className: 'min-w-[36px]',",
            "       type: 'image',",
            "       source: 'https://fn-uat-server.s3.ap-south-1.amazonaws.com/expense-other/nupczd_66299971.png',",
            "       shape: 'circle',",
            "   }}",
            "   renderTitle={(detail) => (",
            "       <div className='flex gap-1.5'>",
            "           <span className='font-semibold'>{detail?.name || '-'}</span>",
            "           <BadgeCircleIcon",
            "               type='solid'",
            "               appearance={",
            "                   detail?.active ? 'polaris-success' : 'polaris-error'",
            "               }",
            "           />",
            "       </div>",
            "   )}",
            "   subtitles={[{ subtitleKey: 'email' }]}",
            "   bottomComponent={{",
            "       type: 'datarow',",
            "       data: {",
            "           columns: 'one',",
            "           data: [",
            "               {",
            "                   label: {",
            "                       renderTitle: (value) => (",
            "                           <span>",
            "                               {value?.designation_name || '-'}",
            "                           </span>",
            "                       ),",
            "                       source: IdentityCardSvgIcon,",
            "                       iconColor: 'text-base-secondary',",
            "                   },",
            "               },",
            "           ],",
            "       },",
            "   }}",
            "/>"
        ]
    },
    "formGenerator": {
        "prefix": "fn-form",
        "body": [
            "\tconst isEdit = ModalFormUtil.isEdit(data);",
            "",
            "\tconst formSchema = {",
            "\t\tname: {",
            "\t\t\ttype: 'text',",
            "\t\t},",
            "\t\tmanager_id: {",
            "\t\t\ttype: 'reference_select',",
            "\t\t\trequired: false,",
            "\t\t\tcontroller: $3,",
            "\t\t},",
            "\t};",
            "",
            "\tconst apiSchema: ApiSchema = {",
            "\t\tcontroller: $1,",
            "\t\tmethod: 'create',",
            "\t\tonSuccess: () => {},",
            "\t};",
            "",
            "\treturn new ModalFormUtil(formSchema, apiSchema).process({",
            "\t\tmodal_type: 'modal',",
            "\t\ttitle: `${isEdit ? 'Edit' : 'Add'} $2`,",
            "\t\tmodalProps: {",
            "\t\t\tmodalSize: 'md',",
            "\t\t},",
            "\t\tformBuilderProps: {",
            "\t\t\tlayout: 'two-column',",
            "\t\t\twithSaveAndNew: true,",
            "\t\t},",
            "\t\tinitialValueId: data?.id,",
            "\t});"
        ],
        "description": "This is the form generator"
    }
}
